{"ast":null,"code":"import _slicedToArray from\"/Users/seokhyunkim/Desktop/projects/fake_reddit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"../../App.scss\";import{Dropdown,DropdownToggle,DropdownMenu,DropdownItem,Button}from\"reactstrap\";import{Link}from\"react-router-dom\";import LoginModal from\"./LoginModal\";import SignupModal from\"./SignupModal\";var Navbar=function Navbar(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dropdownOpen=_useState2[0],setDropdownOpen=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),token=_useState4[0],setToken=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),username=_useState6[0],setUsername=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),logModal=_useState8[0],setLogModal=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),signModal=_useState10[0],setSignModal=_useState10[1];var logModalToggle=function logModalToggle(){return setLogModal(!logModal);};var signModalToggle=function signModalToggle(){return setSignModal(!signModal);};var updateToken=function updateToken(){if(localStorage.getItem(\"userToken\")){setToken(localStorage.getItem(\"userToken\"));setUsername(localStorage.getItem(\"username\"));}};var logOut=function logOut(e){e.preventDefault();localStorage.clear();window.location.reload();};var toggle=function toggle(){return setDropdownOpen(function(prevState){return!prevState;});};var isLoggedIn=localStorage.getItem(\"userToken\");var user_name=localStorage.getItem(\"username\");return/*#__PURE__*/React.createElement(\"nav\",{className:\"nav-container\"},/*#__PURE__*/React.createElement(Link,{className:\"page-title\",to:\"/\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-reddit\",\"aria-hidden\":\"true\"}),/*#__PURE__*/React.createElement(\"p\",{className:\"nav-title\"},\"FakeReddit\")),/*#__PURE__*/React.createElement(\"form\",{className:\"search-bar-container\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-search\"}),/*#__PURE__*/React.createElement(\"input\",{className:\"search-bar\",name:\"search\",type:\"search\",placeholder:\"Search\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"button-container\"},isLoggedIn===null?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"nav-button login-button\",color:\"link\",onClick:logModalToggle},\"LOG IN\"),/*#__PURE__*/React.createElement(Button,{className:\"nav-button signup-button\",color:\"primary\",onClick:signModalToggle},\"SIGN UP\")):/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(Dropdown,{size:\"sm\",isOpen:dropdownOpen,toggle:toggle},/*#__PURE__*/React.createElement(DropdownToggle,{className:\"dropdown-toggle\"},isLoggedIn===null?/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user\"}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user\"})),/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"p\",null,user_name)))),/*#__PURE__*/React.createElement(DropdownMenu,{right:true},/*#__PURE__*/React.createElement(DropdownItem,{header:true},\"MORE STUFF\"),/*#__PURE__*/React.createElement(DropdownItem,null,/*#__PURE__*/React.createElement(\"a\",{id:\"help-tag\",href:\"https://www.reddithelp.com/hc/en-us\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Help Center\")),/*#__PURE__*/React.createElement(DropdownItem,{divider:true}),isLoggedIn===null?/*#__PURE__*/React.createElement(DropdownItem,null,/*#__PURE__*/React.createElement(\"p\",{onClick:logModalToggle},\"Log In / Sign Up\")):/*#__PURE__*/React.createElement(DropdownItem,{onClick:logOut},/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"logout-button\"},\"Log Out\")))),/*#__PURE__*/React.createElement(LoginModal,{updateToken:updateToken,logModalToggle:logModalToggle,logModal:logModal}),/*#__PURE__*/React.createElement(SignupModal,{updateToken:updateToken,signModalToggle:signModalToggle,signModal:signModal})));};export default Navbar;","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/navbar/Navbar.js"],"names":["React","useState","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","Link","LoginModal","SignupModal","Navbar","dropdownOpen","setDropdownOpen","token","setToken","username","setUsername","logModal","setLogModal","signModal","setSignModal","logModalToggle","signModalToggle","updateToken","localStorage","getItem","logOut","e","preventDefault","clear","window","location","reload","toggle","prevState","isLoggedIn","user_name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../../App.scss\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\n\nconst Navbar = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [logModal, setLogModal] = useState(false);\n  const [signModal, setSignModal] = useState(false);\n\n  const logModalToggle = () => setLogModal(!logModal);\n\n  const signModalToggle = () => setSignModal(!signModal);\n\n  const updateToken = () => {\n    if (localStorage.getItem(\"userToken\")) {\n      setToken(localStorage.getItem(\"userToken\"));\n      setUsername(localStorage.getItem(\"username\"));\n    }\n  };\n\n  const logOut = (e) => {\n    e.preventDefault();\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  let isLoggedIn = localStorage.getItem(\"userToken\");\n  let user_name = localStorage.getItem(\"username\");\n\n  return (\n    <nav className=\"nav-container\">\n      <Link className=\"page-title\" to=\"/\">\n        <i className=\"fa fa-reddit\" aria-hidden=\"true\"></i>\n        <p className=\"nav-title\">FakeReddit</p>\n      </Link>\n\n      <form className=\"search-bar-container\">\n        <i className=\"fas fa-search\"></i>\n        <input\n          className=\"search-bar\"\n          name=\"search\"\n          type=\"search\"\n          placeholder=\"Search\"\n        />\n      </form>\n\n      <div className=\"button-container\">\n        {isLoggedIn === null ? (\n          <>\n            <Button\n              className=\"nav-button login-button\"\n              color=\"link\"\n              onClick={logModalToggle}\n            >\n              LOG IN\n            </Button>\n            <Button\n              className=\"nav-button signup-button\"\n              color=\"primary\"\n              onClick={signModalToggle}\n            >\n              SIGN UP\n            </Button>\n          </>\n        ) : (\n          <div></div>\n        )}\n\n        <Dropdown size=\"sm\" isOpen={dropdownOpen} toggle={toggle}>\n          <DropdownToggle className=\"dropdown-toggle\">\n            {isLoggedIn === null ? (\n              <i className=\"fas fa-user\"></i>\n            ) : (\n              <>\n                <span>\n                  <i className=\"fas fa-user\"></i>\n                </span>\n                <span>\n                  <p>{user_name}</p>\n                </span>\n              </>\n            )}\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem header>MORE STUFF</DropdownItem>\n            <DropdownItem>\n              <a\n                id=\"help-tag\"\n                href=\"https://www.reddithelp.com/hc/en-us\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Help Center\n              </a>\n            </DropdownItem>\n            <DropdownItem divider />\n            {isLoggedIn === null ? (\n              <DropdownItem>\n                <p onClick={logModalToggle}>Log In / Sign Up</p>\n              </DropdownItem>\n            ) : (\n              <DropdownItem onClick={logOut}>\n                <Link to=\"/\" className=\"logout-button\">\n                  Log Out\n                </Link>\n              </DropdownItem>\n            )}\n          </DropdownMenu>\n        </Dropdown>\n        <LoginModal\n          updateToken={updateToken}\n          logModalToggle={logModalToggle}\n          logModal={logModal}\n        />\n        <SignupModal\n          updateToken={updateToken}\n          signModalToggle={signModalToggle}\n          signModal={signModal}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}