{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/post/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CommunityBanner from \"../home/CommunityBanner\";\nimport axios from \"axios\";\nimport LoginModal from \"../navbar/LoginModal\";\nimport SignupModal from \"../navbar/SignupModal\";\nimport Comment from \"./Comment\";\nimport { Button } from \"reactstrap\";\n\nconst Post = () => {\n  const [newUpVote, setUpVote] = useState(0);\n  const [upVoteClicked, setUpVoteClicked] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [numComments, setNumComments] = useState(0);\n  const [logModal, setLogModal] = useState(false);\n  const [signModal, setSignModal] = useState(false);\n  const [comment_content, setCommentContent] = useState(\"\");\n  const [commentList, setCommentList] = useState([]);\n  const postID = useParams().postID;\n  const upVote = newUpVote;\n  useEffect(() => {\n    axios.get(\"/post\", {\n      params: {\n        postID: postID\n      }\n    }).then(res => res.data).then(data => {\n      let post = data.post;\n      setUsername(post.username);\n      setUpVote(post.upVote);\n      setTitle(post.title);\n      setContent(post.content);\n      setCreatedAt(post.createdAt);\n    }).catch(console.log(\"Post Load Error\"));\n    getComment();\n  }, []);\n\n  const postComment = e => {\n    e.preventDefault();\n    console.log(`POST operation comment ${postID}`);\n    axios.post(\"http://localhost:5000/post_comment\", {\n      username: localStorage.getItem(\"username\"),\n      content: comment_content,\n      postID: postID\n    }).then(window.location.reload());\n  };\n\n  const getComment = () => {\n    axios.get(\"http://localhost:5000/get_comment\", {\n      params: {\n        postID: postID\n      }\n    }).then(res => res.data).then(data => {\n      console.log(data);\n      setCommentList(data.comments);\n      setNumComments(data.comments.length);\n    }).catch(err => console.log(err));\n  };\n\n  const logModalToggle = () => setLogModal(!logModal);\n\n  const signModalToggle = () => setSignModal(!signModal);\n\n  const upVotePost = isUpVote => {\n    axios.patch(\"/posts/upvote\", {\n      isUpVote: isUpVote,\n      postID: postID\n    }).then(res => res.data).then(data => console.log(data.message));\n  };\n\n  const updateToken = () => {\n    if (localStorage.getItem(\"userToken\")) {\n      setToken(localStorage.getItem(\"userToken\"));\n      setUsername(localStorage.getItem(\"username\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vote-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (!upVoteClicked) {\n        setUpVote(upVote + 1);\n        setUpVoteClicked(true);\n        upVotePost(true);\n      } else {\n        setUpVote(upVote);\n        setUpVoteClicked(false);\n        upVotePost(false);\n      }\n    },\n    className: \"vote-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })), newUpVote === 0 ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-circle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 32\n    }\n  }) : newUpVote, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (!upVoteClicked) {\n        if (upVote > 0) {\n          setUpVote(upVote - 1);\n          setUpVoteClicked(true);\n          upVotePost(false);\n        }\n      } else {\n        setUpVote(upVote);\n        setUpVoteClicked(false);\n        upVotePost(true);\n      }\n    },\n    className: \"vote-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"posted-by\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Posted by u/\", username, \" \", createdAt), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-functions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, numComments, \" Comments\"), localStorage.getItem(\"userToken\") ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-box-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    onSubmit: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"comment-box\",\n    name: \"\",\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    placeholder: \"What are your thoughts?\",\n    onChange: e => {\n      setCommentContent(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"cmt-btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    id: \"comment-btn\",\n    disabled: !comment_content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"COMMENT\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-box-container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Log in or sign up to leave a comment\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"comment-btn2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"nav-button login-button\",\n    color: \"link\",\n    onClick: logModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, \"LOG IN\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"nav-button signup-button\",\n    color: \"primary\",\n    onClick: signModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \"SIGN UP\"), /*#__PURE__*/React.createElement(LoginModal, {\n    updateToken: updateToken,\n    logModalToggle: logModalToggle,\n    logModal: logModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(SignupModal, {\n    updateToken: updateToken,\n    signModalToggle: signModalToggle,\n    signModal: signModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"hrLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }), commentList && commentList.map(comment => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      commentID: comment.commentID,\n      username: comment.username,\n      createdAt: comment.createdAt,\n      content: comment.content,\n      points: comment.points,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-right-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CommunityBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/post/Post.js"],"names":["React","useState","useEffect","useParams","CommunityBanner","axios","LoginModal","SignupModal","Comment","Button","Post","newUpVote","setUpVote","upVoteClicked","setUpVoteClicked","token","setToken","username","setUsername","title","setTitle","content","setContent","createdAt","setCreatedAt","numComments","setNumComments","logModal","setLogModal","signModal","setSignModal","comment_content","setCommentContent","commentList","setCommentList","postID","upVote","get","params","then","res","data","post","catch","console","log","getComment","postComment","e","preventDefault","localStorage","getItem","window","location","reload","comments","length","err","logModalToggle","signModalToggle","upVotePost","isUpVote","patch","message","updateToken","target","value","map","comment","commentID","points"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CommunityBanner from \"../home/CommunityBanner\";\nimport axios from \"axios\";\nimport LoginModal from \"../navbar/LoginModal\";\nimport SignupModal from \"../navbar/SignupModal\";\nimport Comment from \"./Comment\";\nimport { Button } from \"reactstrap\";\n\nconst Post = () => {\n  const [newUpVote, setUpVote] = useState(0);\n  const [upVoteClicked, setUpVoteClicked] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [numComments, setNumComments] = useState(0);\n  const [logModal, setLogModal] = useState(false);\n  const [signModal, setSignModal] = useState(false);\n  const [comment_content, setCommentContent] = useState(\"\");\n  const [commentList, setCommentList] = useState([]);\n  const postID = useParams().postID;\n  const upVote = newUpVote;\n\n  useEffect(() => {\n    axios\n      .get(\"/post\", { params: { postID: postID } })\n      .then((res) => res.data)\n      .then((data) => {\n        let post = data.post;\n        setUsername(post.username);\n        setUpVote(post.upVote);\n        setTitle(post.title);\n        setContent(post.content);\n        setCreatedAt(post.createdAt);\n      })\n      .catch(console.log(\"Post Load Error\"));\n    getComment();\n  }, []);\n\n  const postComment = (e) => {\n    e.preventDefault();\n    console.log(`POST operation comment ${postID}`);\n    axios\n      .post(\"http://localhost:5000/post_comment\", {\n        username: localStorage.getItem(\"username\"),\n        content: comment_content,\n        postID: postID,\n      })\n      .then(window.location.reload());\n  };\n\n  const getComment = () => {\n    axios\n      .get(\"http://localhost:5000/get_comment\", { params: { postID: postID } })\n      .then((res) => res.data)\n      .then((data) => {\n        console.log(data);\n        setCommentList(data.comments);\n        setNumComments(data.comments.length);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const logModalToggle = () => setLogModal(!logModal);\n\n  const signModalToggle = () => setSignModal(!signModal);\n\n  const upVotePost = (isUpVote) => {\n    axios\n      .patch(\"/posts/upvote\", { isUpVote: isUpVote, postID: postID })\n      .then((res) => res.data)\n      .then((data) => console.log(data.message));\n  };\n\n  const updateToken = () => {\n    if (localStorage.getItem(\"userToken\")) {\n      setToken(localStorage.getItem(\"userToken\"));\n      setUsername(localStorage.getItem(\"username\"));\n    }\n  };\n\n  return (\n    <div className=\"post-main-container\">\n      <div className=\"post-left-container\">\n        <div className=\"content-box\">\n          <div className=\"vote-bar\">\n            <button\n              onClick={() => {\n                if (!upVoteClicked) {\n                  setUpVote(upVote + 1);\n                  setUpVoteClicked(true);\n                  upVotePost(true);\n                } else {\n                  setUpVote(upVote);\n                  setUpVoteClicked(false);\n                  upVotePost(false);\n                }\n              }}\n              className=\"vote-button\"\n            >\n              <i className=\"fas fa-arrow-up\"></i>\n            </button>\n            {newUpVote === 0 ? <i className=\"fas fa-circle \"></i> : newUpVote}\n            <button\n              onClick={() => {\n                if (!upVoteClicked) {\n                  if (upVote > 0) {\n                    setUpVote(upVote - 1);\n                    setUpVoteClicked(true);\n                    upVotePost(false);\n                  }\n                } else {\n                  setUpVote(upVote);\n                  setUpVoteClicked(false);\n                  upVotePost(true);\n                }\n              }}\n              className=\"vote-button\"\n            >\n              <i className=\"fas fa-arrow-down\"></i>\n            </button>\n          </div>\n          <div className=\"post-contents\">\n            <p className=\"posted-by\">\n              Posted by u/{username} {createdAt}\n            </p>\n            <p className=\"post-title\">{title}</p>\n            <p className=\"post-content\">{content}</p>\n            <div className=\"summary-functions\">{numComments} Comments</div>\n            {localStorage.getItem(\"userToken\") ? (\n              <div className=\"comment-box-container\">\n                <form method=\"POST\" onSubmit={postComment}>\n                  <textarea\n                    className=\"comment-box\"\n                    name=\"\"\n                    id=\"\"\n                    cols=\"30\"\n                    rows=\"10\"\n                    placeholder=\"What are your thoughts?\"\n                    onChange={(e) => {\n                      setCommentContent(e.target.value);\n                    }}\n                  ></textarea>\n                  <div id=\"cmt-btn-container\">\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      id=\"comment-btn\"\n                      disabled={!comment_content}\n                    >\n                      COMMENT\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <div className=\"comment-box-container2\">\n                <p>Log in or sign up to leave a comment</p>\n                <div id=\"comment-btn2\">\n                  <Button\n                    className=\"nav-button login-button\"\n                    color=\"link\"\n                    onClick={logModalToggle}\n                  >\n                    LOG IN\n                  </Button>\n                  <Button\n                    className=\"nav-button signup-button\"\n                    color=\"primary\"\n                    onClick={signModalToggle}\n                  >\n                    SIGN UP\n                  </Button>\n                  <LoginModal\n                    updateToken={updateToken}\n                    logModalToggle={logModalToggle}\n                    logModal={logModal}\n                  />\n                  <SignupModal\n                    updateToken={updateToken}\n                    signModalToggle={signModalToggle}\n                    signModal={signModal}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"comment-container\">\n          <div id=\"hrLine\"></div>\n          {commentList &&\n            commentList.map((comment) => {\n              return (\n                <Comment\n                  commentID={comment.commentID}\n                  username={comment.username}\n                  createdAt={comment.createdAt}\n                  content={comment.content}\n                  points={comment.points}\n                />\n              );\n            })}\n        </div>\n      </div>\n\n      <div className=\"post-right-container\">\n        <CommunityBanner />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}