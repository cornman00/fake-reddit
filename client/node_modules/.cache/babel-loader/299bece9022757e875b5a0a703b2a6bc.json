{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/navbar/SignupModal.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.scss\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport GoogleLogin from \"react-google-login\";\nimport emailCheck from \"../../utilFunctions\"; // const SignupModal = ({ updateToken }) => {\n//   const [modal, setModal] = useState(false);\n//   const [email, setEmail] = useState(\"\");\n//   const [username, setUsername] = useState(\"\");\n//   const [password1, setPassword1] = useState(\"\");\n//   const [password2, setPassword2] = useState(\"\");\n//   const [errors, setErrors] = useState({\n//     username_error: \"\",\n//     email_error: \"\",\n//     password1_error: \"\",\n//     password2_error: \"\",\n//   });\n//   // const [isValid, setValid] = useState(false);\n//   const toggle = () => setModal(!modal);\n//   const handleSubmit = (e) => {\n//     // const isValid = formValidate();\n//     e.preventDefault();\n//     // console.log(errors);\n//     // if (isValid) {\n//     axios\n//       .post(\"/signup\", {\n//         email: email,\n//         username: username,\n//         password: password1,\n//       })\n//       .then((res) => {\n//         alert(\"Successfully signed up\\nPlease Log in\");\n//         console.log(\"New User: \" + username);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//     // }\n//   };\n//   // const formValidate = () => {\n//   //   let isValid = true;\n//   //   if (!username) {\n//   //     setErrors((prev) => ({ ...prev, [\"username_error\"]: \"Empty Username\" }));\n//   //     isValid = false;\n//   //   } else if (username.length <= 4 && username.length >= 21) {\n//   //     setErrors((prev) => ({\n//   //       ...prev,\n//   //       [\"username_error\"]:\n//   //         \"The length of username should be between 5 and 20.\",\n//   //     }));\n//   //     isValid = false;\n//   //   }\n//   //   // if (!email) {\n//   //   //   setErrors(\"Empty Email\");\n//   //   //   isValid = false;\n//   //   // }\n//   //   // // add email regex check\n//   //   // if (!password1) {\n//   //   //   setErrors(\"Empty Password\");\n//   //   //   isValid = false;\n//   //   // }\n//   //   // if (!password2) {\n//   //   //   setErrors(\"Empty Password\");\n//   //   //   isValid = false;\n//   //   // } else if (password1 !== password2) {\n//   //   //   setErrors(\"Password Not Matched\");\n//   //   //   isValid = false;\n//   //   // }\n//   //   return isValid;\n//   // };\n//   const googleOnSuccess = (res) => {\n//     console.log(res);\n//     const userEmail = res.profileObj.email;\n//     const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n//     localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n//     localStorage.setItem(\"username\", parsed_username);\n//     updateToken();\n//     alert(\"Logged In Successfully\");\n//   };\n//   const googleOnFailure = (res) => {\n//     console.log(res);\n//   };\n//   return (\n//     <div>\n//       <Button\n//         className=\"nav-button signup-button\"\n//         color=\"primary\"\n//         onClick={toggle}\n//       >\n//         SIGN UP\n//       </Button>\n//       <Modal className=\"auth-modal\" isOpen={modal} toggle={toggle}>\n//         <ModalHeader className=\"modal-header\" toggle={toggle}>\n//           Sign up\n//         </ModalHeader>\n//         <ModalBody className=\"modal-body\">\n//           <GoogleLogin\n//             clientId=\"1087910724182-02v9tf6jm6h867i3vd81rui2dm4b6jvb.apps.googleusercontent.com\"\n//             render={(renderProps) => (\n//               <Button\n//                 onClick={renderProps.onClick}\n//                 disabled={renderProps.disabled}\n//                 color=\"link\"\n//                 className=\"google-button\"\n//               >\n//                 <i className=\"fab fa-google\"></i>\n//                 CONTINUE WITH GOOGLE\n//               </Button>\n//             )}\n//             onSuccess={googleOnSuccess}\n//             onFailure={googleOnFailure}\n//             cookiePolicy={\"single_host_origin\"}\n//           />\n//           <form method=\"POST\" onSubmit={handleSubmit}>\n//             <div className=\"input-buttons-wrapper\">\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"EMAIL\"\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//               />\n//               <div style={{ color: \"red\" }}>{errors}</div>\n//               <input\n//                 type=\"text\"\n//                 name=\"username\"\n//                 placeholder=\"USERNAME\"\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 required\n//               />\n//               <div style={{ color: \"red\" }}>{errors}</div>\n//               <input\n//                 type=\"password\"\n//                 name=\"password1\"\n//                 placeholder=\"PASSWORD\"\n//                 onChange={(e) => setPassword1(e.target.value)}\n//                 required\n//               />\n//               <div style={{ color: \"red\" }}>{errors}</div>\n//               <input\n//                 type=\"password\"\n//                 name=\"password2\"\n//                 placeholder=\"Confirm Password\"\n//                 onChange={(e) => setPassword2(e.target.value)}\n//                 required\n//               />\n//               <div style={{ color: \"red\" }}>{errors}</div>\n//             </div>\n//             <Button\n//               type=\"submit\"\n//               className=\"modal-signup-button\"\n//               color=\"primary\"\n//               onClick={toggle}\n//             >\n//               SIGN UP\n//             </Button>\n//           </form>\n//         </ModalBody>\n//       </Modal>\n//     </div>\n//   );\n// };\n// export default SignupModal;\n\nconst SignupModal = ({\n  updateToken\n}) => {\n  const [modal, setModal] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username_error: \"\",\n    email_error: \"\",\n    password1_error: \"\",\n    password2_error: \"\"\n  });\n\n  const toggle = () => setModal(!modal);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const new_user = {\n      email: email,\n      username: username,\n      password: password\n    };\n    axios.post(\"/signup\", {\n      email: email,\n      username: username,\n      password: password\n    }).then(res => {\n      alert(\"Successfully signed up\");\n      console.log(\"New User: \" + new_user.username); // history.push(\"/\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const googleOnSuccess = res => {\n    console.log(res);\n    const userEmail = res.profileObj.email;\n    const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n    localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n    localStorage.setItem(\"username\", parsed_username);\n    updateToken();\n    alert(\"Logged In Successfully\");\n  };\n\n  const googleOnFailure = res => {\n    console.log(res);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"nav-button singup-button\",\n    color: \"primary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, \"SIGN UP\"), /*#__PURE__*/React.createElement(Modal, {\n    className: \"auth-modal\",\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"modal-header\",\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"link\",\n    className: \"google-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fab fa-google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }), \"CONTINUE WITH GOOGLE\"), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-buttons-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"EMAIL\",\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"USERNAME\",\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"modal-signup-button\",\n    color: \"primary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\")))));\n};\n\nexport default SignupModal;","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/navbar/SignupModal.js"],"names":["React","useState","axios","Button","Modal","ModalHeader","ModalBody","GoogleLogin","emailCheck","SignupModal","updateToken","modal","setModal","email","setEmail","username","setUsername","password","setPassword","password1","setPassword1","password2","setPassword2","errors","setErrors","username_error","email_error","password1_error","password2_error","toggle","handleSubmit","e","preventDefault","new_user","post","then","res","alert","console","log","catch","err","googleOnSuccess","userEmail","profileObj","parsed_username","substring","indexOf","localStorage","setItem","tokenObj","access_token","googleOnFailure","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.scss\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport GoogleLogin from \"react-google-login\";\nimport emailCheck from \"../../utilFunctions\";\n\n// const SignupModal = ({ updateToken }) => {\n//   const [modal, setModal] = useState(false);\n//   const [email, setEmail] = useState(\"\");\n//   const [username, setUsername] = useState(\"\");\n//   const [password1, setPassword1] = useState(\"\");\n//   const [password2, setPassword2] = useState(\"\");\n//   const [errors, setErrors] = useState({\n//     username_error: \"\",\n//     email_error: \"\",\n//     password1_error: \"\",\n//     password2_error: \"\",\n//   });\n//   // const [isValid, setValid] = useState(false);\n\n//   const toggle = () => setModal(!modal);\n\n//   const handleSubmit = (e) => {\n//     // const isValid = formValidate();\n//     e.preventDefault();\n//     // console.log(errors);\n\n//     // if (isValid) {\n//     axios\n//       .post(\"/signup\", {\n//         email: email,\n//         username: username,\n//         password: password1,\n//       })\n//       .then((res) => {\n//         alert(\"Successfully signed up\\nPlease Log in\");\n//         console.log(\"New User: \" + username);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//     // }\n//   };\n\n//   // const formValidate = () => {\n//   //   let isValid = true;\n\n//   //   if (!username) {\n//   //     setErrors((prev) => ({ ...prev, [\"username_error\"]: \"Empty Username\" }));\n//   //     isValid = false;\n//   //   } else if (username.length <= 4 && username.length >= 21) {\n//   //     setErrors((prev) => ({\n//   //       ...prev,\n//   //       [\"username_error\"]:\n//   //         \"The length of username should be between 5 and 20.\",\n//   //     }));\n//   //     isValid = false;\n//   //   }\n\n//   //   // if (!email) {\n//   //   //   setErrors(\"Empty Email\");\n//   //   //   isValid = false;\n//   //   // }\n//   //   // // add email regex check\n\n//   //   // if (!password1) {\n//   //   //   setErrors(\"Empty Password\");\n//   //   //   isValid = false;\n//   //   // }\n\n//   //   // if (!password2) {\n//   //   //   setErrors(\"Empty Password\");\n//   //   //   isValid = false;\n//   //   // } else if (password1 !== password2) {\n//   //   //   setErrors(\"Password Not Matched\");\n//   //   //   isValid = false;\n//   //   // }\n\n//   //   return isValid;\n//   // };\n\n//   const googleOnSuccess = (res) => {\n//     console.log(res);\n//     const userEmail = res.profileObj.email;\n//     const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n//     localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n//     localStorage.setItem(\"username\", parsed_username);\n//     updateToken();\n//     alert(\"Logged In Successfully\");\n//   };\n\n//   const googleOnFailure = (res) => {\n//     console.log(res);\n//   };\n\n//   return (\n//     <div>\n//       <Button\n//         className=\"nav-button signup-button\"\n//         color=\"primary\"\n//         onClick={toggle}\n//       >\n//         SIGN UP\n//       </Button>\n//       <Modal className=\"auth-modal\" isOpen={modal} toggle={toggle}>\n//         <ModalHeader className=\"modal-header\" toggle={toggle}>\n//           Sign up\n//         </ModalHeader>\n//         <ModalBody className=\"modal-body\">\n//           <GoogleLogin\n//             clientId=\"1087910724182-02v9tf6jm6h867i3vd81rui2dm4b6jvb.apps.googleusercontent.com\"\n//             render={(renderProps) => (\n//               <Button\n//                 onClick={renderProps.onClick}\n//                 disabled={renderProps.disabled}\n//                 color=\"link\"\n//                 className=\"google-button\"\n//               >\n//                 <i className=\"fab fa-google\"></i>\n//                 CONTINUE WITH GOOGLE\n//               </Button>\n//             )}\n//             onSuccess={googleOnSuccess}\n//             onFailure={googleOnFailure}\n//             cookiePolicy={\"single_host_origin\"}\n//           />\n//           <form method=\"POST\" onSubmit={handleSubmit}>\n//             <div className=\"input-buttons-wrapper\">\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"EMAIL\"\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//               />\n//               <div style={{ color: \"red\" }}>{errors}</div>\n//               <input\n//                 type=\"text\"\n//                 name=\"username\"\n//                 placeholder=\"USERNAME\"\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 required\n//               />\n//               <div style={{ color: \"red\" }}>{errors}</div>\n//               <input\n//                 type=\"password\"\n//                 name=\"password1\"\n//                 placeholder=\"PASSWORD\"\n//                 onChange={(e) => setPassword1(e.target.value)}\n//                 required\n//               />\n//               <div style={{ color: \"red\" }}>{errors}</div>\n//               <input\n//                 type=\"password\"\n//                 name=\"password2\"\n//                 placeholder=\"Confirm Password\"\n//                 onChange={(e) => setPassword2(e.target.value)}\n//                 required\n//               />\n//               <div style={{ color: \"red\" }}>{errors}</div>\n//             </div>\n//             <Button\n//               type=\"submit\"\n//               className=\"modal-signup-button\"\n//               color=\"primary\"\n//               onClick={toggle}\n//             >\n//               SIGN UP\n//             </Button>\n//           </form>\n//         </ModalBody>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default SignupModal;\n\nconst SignupModal = ({ updateToken }) => {\n  const [modal, setModal] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username_error: \"\",\n    email_error: \"\",\n    password1_error: \"\",\n    password2_error: \"\",\n  });\n\n  const toggle = () => setModal(!modal);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const new_user = {\n      email: email,\n      username: username,\n      password: password,\n    };\n\n    axios\n      .post(\"/signup\", {\n        email: email,\n        username: username,\n        password: password,\n      })\n      .then((res) => {\n        alert(\"Successfully signed up\");\n        console.log(\"New User: \" + new_user.username);\n        // history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const googleOnSuccess = (res) => {\n    console.log(res);\n    const userEmail = res.profileObj.email;\n    const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n    localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n    localStorage.setItem(\"username\", parsed_username);\n    updateToken();\n    alert(\"Logged In Successfully\");\n  };\n\n  const googleOnFailure = (res) => {\n    console.log(res);\n  };\n\n  return (\n    <div>\n      <Button\n        className=\"nav-button singup-button\"\n        color=\"primary\"\n        onClick={toggle}\n      >\n        SIGN UP\n      </Button>\n      <Modal className=\"auth-modal\" isOpen={modal} toggle={toggle}>\n        <ModalHeader className=\"modal-header\" toggle={toggle}>\n          Sign up\n        </ModalHeader>\n        <ModalBody className=\"modal-body\">\n          <Button color=\"link\" className=\"google-button\">\n            <i class=\"fab fa-google\"></i>\n            CONTINUE WITH GOOGLE\n          </Button>\n          <form method=\"POST\" onSubmit={handleSubmit}>\n            <div className=\"input-buttons-wrapper\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"EMAIL\"\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n              {/* <div style={{ color: \"red\" }}>{errors}</div> */}\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"USERNAME\"\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n              {/* <div style={{ color: \"red\" }}>{errors}</div>\n              <input\n                type=\"password\"\n                name=\"password1\"\n                placeholder=\"PASSWORD\"\n                onChange={(e) => setPassword1(e.target.value)}\n                required\n              /> */}\n              {/* <div style={{ color: \"red\" }}>{errors}</div>\n              <input\n                type=\"password\"\n                name=\"password2\"\n                placeholder=\"Confirm Password\"\n                onChange={(e) => setPassword2(e.target.value)}\n                required\n              /> */}\n              {/* <div style={{ color: \"red\" }}>{errors}</div> */}\n            </div>\n            <Button\n              type=\"submit\"\n              className=\"modal-signup-button\"\n              color=\"primary\"\n              onClick={toggle}\n            >\n              SIGN UP\n            </Button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SignupModal;\n"]},"metadata":{},"sourceType":"module"}