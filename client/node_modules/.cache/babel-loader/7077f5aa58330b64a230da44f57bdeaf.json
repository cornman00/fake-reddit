{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/navbar/SignupModal.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.scss\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport GoogleLogin from \"react-google-login\";\nimport emailCheck from \"../../utilFunctions\";\n\nconst SignupModal = ({\n  updateToken\n}) => {\n  const [modal, setModal] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username_error: \"\",\n    email_error: \"\",\n    password1_error: \"\",\n    password2_error: \"\"\n  }); // const [isValid, setValid] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const handleSubmit = e => {\n    const isValid = formValidate();\n    e.preventDefault();\n    console.log(errors);\n\n    if (isValid) {\n      axios.post(\"/signup\", {\n        email: email,\n        username: username,\n        password: password1\n      }).then(res => {\n        alert(\"Successfully signed up\\nPlease Log in\");\n        console.log(\"New User: \" + username);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const formValidate = () => {\n    let isValid = true;\n\n    if (!email) {\n      setErrors(\"Empty Email\");\n      isValid = false;\n    } // add email regex check\n\n\n    if (!username) {\n      setErrors(prev => ({ ...prev,\n        [\"username_error\"]: \"Empty Username\"\n      }));\n      isValid = false;\n    } else if (username.length <= 4 && username.length >= 21) {\n      setErrors(prev => ({ ...prev,\n        [\"username_error\"]: \"The length of username should be between 5 and 20.\"\n      }));\n      isValid = false;\n    } // if (!password1) {\n    //   setErrors(\"Empty Password\");\n    //   isValid = false;\n    // }\n    // if (!password2) {\n    //   setErrors(\"Empty Password\");\n    //   isValid = false;\n    // } else if (password1 !== password2) {\n    //   setErrors(\"Password Not Matched\");\n    //   isValid = false;\n    // }\n\n\n    return isValid;\n  };\n\n  const googleOnSuccess = res => {\n    console.log(res);\n    const userEmail = res.profileObj.email;\n    const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n    localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n    localStorage.setItem(\"username\", parsed_username);\n    updateToken();\n    alert(\"Logged In Successfully\");\n  };\n\n  const googleOnFailure = res => {\n    console.log(res);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"nav-button signup-button\",\n    color: \"primary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"SIGN UP\"), /*#__PURE__*/React.createElement(Modal, {\n    className: \"auth-modal\",\n    isOpen: modal,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"modal-header\",\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"1087910724182-02v9tf6jm6h867i3vd81rui2dm4b6jvb.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      color: \"link\",\n      className: \"google-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fab fa-google\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), \"CONTINUE WITH GOOGLE\"),\n    onSuccess: googleOnSuccess,\n    onFailure: googleOnFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-buttons-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"EMAIL\",\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, errors[\"email_error\"]), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"USERNAME\",\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, errors[\"username_error\"]), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password1\",\n    placeholder: \"PASSWORD\",\n    onChange: e => setPassword1(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, errors[\"password1_error\"]), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    placeholder: \"Confirm Password\",\n    onChange: e => setPassword2(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, errors[\"password2_error\"])), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"modal-signup-button\",\n    color: \"primary\" // onClick={toggle}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\")))));\n};\n\nexport default SignupModal;","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/navbar/SignupModal.js"],"names":["React","useState","axios","Button","Modal","ModalHeader","ModalBody","GoogleLogin","emailCheck","SignupModal","updateToken","modal","setModal","email","setEmail","username","setUsername","password1","setPassword1","password2","setPassword2","errors","setErrors","username_error","email_error","password1_error","password2_error","toggle","handleSubmit","e","isValid","formValidate","preventDefault","console","log","post","password","then","res","alert","catch","err","prev","length","googleOnSuccess","userEmail","profileObj","parsed_username","substring","indexOf","localStorage","setItem","tokenObj","access_token","googleOnFailure","renderProps","onClick","disabled","target","value","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.scss\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport GoogleLogin from \"react-google-login\";\nimport emailCheck from \"../../utilFunctions\";\n\nconst SignupModal = ({ updateToken }) => {\n  const [modal, setModal] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username_error: \"\",\n    email_error: \"\",\n    password1_error: \"\",\n    password2_error: \"\",\n  });\n  // const [isValid, setValid] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const handleSubmit = (e) => {\n    const isValid = formValidate();\n    e.preventDefault();\n    console.log(errors);\n\n    if (isValid) {\n      axios\n        .post(\"/signup\", {\n          email: email,\n          username: username,\n          password: password1,\n        })\n        .then((res) => {\n          alert(\"Successfully signed up\\nPlease Log in\");\n          console.log(\"New User: \" + username);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const formValidate = () => {\n    let isValid = true;\n\n    if (!email) {\n      setErrors(\"Empty Email\");\n      isValid = false;\n    }\n    // add email regex check\n\n    if (!username) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"username_error\"]: \"Empty Username\",\n      }));\n      isValid = false;\n    } else if (username.length <= 4 && username.length >= 21) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"username_error\"]:\n          \"The length of username should be between 5 and 20.\",\n      }));\n      isValid = false;\n    }\n\n    // if (!password1) {\n    //   setErrors(\"Empty Password\");\n    //   isValid = false;\n    // }\n\n    // if (!password2) {\n    //   setErrors(\"Empty Password\");\n    //   isValid = false;\n    // } else if (password1 !== password2) {\n    //   setErrors(\"Password Not Matched\");\n    //   isValid = false;\n    // }\n\n    return isValid;\n  };\n\n  const googleOnSuccess = (res) => {\n    console.log(res);\n    const userEmail = res.profileObj.email;\n    const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n    localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n    localStorage.setItem(\"username\", parsed_username);\n    updateToken();\n    alert(\"Logged In Successfully\");\n  };\n\n  const googleOnFailure = (res) => {\n    console.log(res);\n  };\n\n  return (\n    <div>\n      <Button\n        className=\"nav-button signup-button\"\n        color=\"primary\"\n        onClick={toggle}\n      >\n        SIGN UP\n      </Button>\n      <Modal className=\"auth-modal\" isOpen={modal} toggle={toggle}>\n        <ModalHeader className=\"modal-header\" toggle={toggle}>\n          Sign up\n        </ModalHeader>\n        <ModalBody className=\"modal-body\">\n          <GoogleLogin\n            clientId=\"1087910724182-02v9tf6jm6h867i3vd81rui2dm4b6jvb.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                color=\"link\"\n                className=\"google-button\"\n              >\n                <i className=\"fab fa-google\"></i>\n                CONTINUE WITH GOOGLE\n              </Button>\n            )}\n            onSuccess={googleOnSuccess}\n            onFailure={googleOnFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <form method=\"POST\" onSubmit={handleSubmit} noValidate>\n            <div className=\"input-buttons-wrapper\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"EMAIL\"\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n              <div style={{ color: \"red\" }}>{errors[\"email_error\"]}</div>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"USERNAME\"\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n              <div style={{ color: \"red\" }}>{errors[\"username_error\"]}</div>\n              <input\n                type=\"password\"\n                name=\"password1\"\n                placeholder=\"PASSWORD\"\n                onChange={(e) => setPassword1(e.target.value)}\n                required\n              />\n              <div style={{ color: \"red\" }}>{errors[\"password1_error\"]}</div>\n              <input\n                type=\"password\"\n                name=\"password2\"\n                placeholder=\"Confirm Password\"\n                onChange={(e) => setPassword2(e.target.value)}\n                required\n              />\n              <div style={{ color: \"red\" }}>{errors[\"password2_error\"]}</div>\n            </div>\n            <Button\n              type=\"submit\"\n              className=\"modal-signup-button\"\n              color=\"primary\"\n              // onClick={toggle}\n            >\n              SIGN UP\n            </Button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SignupModal;\n"]},"metadata":{},"sourceType":"module"}