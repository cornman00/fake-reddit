{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/navbar/LoginModal.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.scss\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport GoogleLogin from \"react-google-login\";\n\nconst LoginModal = ({\n  updateToken,\n  logModalToggle,\n  logModal\n}) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username_error: \"\",\n    password_error: \"\"\n  });\n\n  const handleSubmit = e => {\n    const isValid = formValidate();\n    e.preventDefault();\n\n    if (isValid) {\n      axios.post(\"/login\", {\n        username: username,\n        password: password\n      }).then(res => res.data).then(data => {\n        if (\"error_message\" in data) {\n          setErrors(prev => ({ ...prev,\n            [\"password_error\"]: data.error_message\n          }));\n        } else {\n          logModalToggle();\n          localStorage.setItem(\"userToken\", data.access_token);\n          localStorage.setItem(\"username\", data.username);\n          updateToken();\n          window.location.reload();\n        }\n      }).catch(err => {\n        logModalToggle();\n        alert(\"Sign up failed. Please try again\");\n        console.log(err);\n      });\n    }\n  };\n\n  const formValidate = () => {\n    let isValid = true;\n    setErrors({});\n\n    if (!username) {\n      setErrors(prev => ({ ...prev,\n        [\"username_error\"]: \"Empty Username\"\n      }));\n      isValid = false;\n    } else if (username.length <= 4 || username.length >= 21) {\n      setErrors(prev => ({ ...prev,\n        [\"username_error\"]: \"The length of username should be between 5 and 20.\"\n      }));\n      isValid = false;\n    }\n\n    if (!password) {\n      setErrors(prev => ({ ...prev,\n        [\"password_error\"]: \"Empty Password\"\n      }));\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const googleOnSuccess = res => {\n    console.log(res);\n    const userEmail = res.profileObj.email;\n    const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n    setUsername(parsed_username);\n    localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n    localStorage.setItem(\"username\", parsed_username);\n    updateToken();\n    alert(\"Logged In Successfully\");\n  };\n\n  const googleOnFailure = res => {\n    console.log(res);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    className: \"auth-modal\",\n    isOpen: logModal,\n    toggle: logModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"modal-header\",\n    toggle: logModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Log in\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"1087910724182-02v9tf6jm6h867i3vd81rui2dm4b6jvb.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      color: \"link\",\n      className: \"google-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fab fa-google\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), \"CONTINUE WITH GOOGLE\"),\n    onSuccess: googleOnSuccess,\n    onFailure: googleOnFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-buttons-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"USERNAME\",\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, errors[\"username_error\"]), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"PASSWORD\",\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, errors[\"password_error\"])), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"modal-login-button\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"LOG IN\")))));\n};\n\nexport default LoginModal;","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/navbar/LoginModal.js"],"names":["React","useState","axios","Button","Modal","ModalHeader","ModalBody","GoogleLogin","LoginModal","updateToken","logModalToggle","logModal","username","setUsername","password","setPassword","errors","setErrors","username_error","password_error","handleSubmit","e","isValid","formValidate","preventDefault","post","then","res","data","prev","error_message","localStorage","setItem","access_token","window","location","reload","catch","err","alert","console","log","length","googleOnSuccess","userEmail","profileObj","email","parsed_username","substring","indexOf","tokenObj","googleOnFailure","renderProps","onClick","disabled","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.scss\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport GoogleLogin from \"react-google-login\";\n\nconst LoginModal = ({ updateToken, logModalToggle, logModal }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username_error: \"\",\n    password_error: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    const isValid = formValidate();\n    e.preventDefault();\n    if (isValid) {\n      axios\n        .post(\"/login\", {\n          username: username,\n          password: password,\n        })\n        .then((res) => res.data)\n        .then((data) => {\n          if (\"error_message\" in data) {\n            setErrors((prev) => ({\n              ...prev,\n              [\"password_error\"]: data.error_message,\n            }));\n          } else {\n            logModalToggle();\n            localStorage.setItem(\"userToken\", data.access_token);\n            localStorage.setItem(\"username\", data.username);\n            updateToken();\n            window.location.reload();\n          }\n        })\n        .catch((err) => {\n          logModalToggle();\n          alert(\"Sign up failed. Please try again\");\n          console.log(err);\n        });\n    }\n  };\n\n  const formValidate = () => {\n    let isValid = true;\n    setErrors({});\n\n    if (!username) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"username_error\"]: \"Empty Username\",\n      }));\n      isValid = false;\n    } else if (username.length <= 4 || username.length >= 21) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"username_error\"]:\n          \"The length of username should be between 5 and 20.\",\n      }));\n      isValid = false;\n    }\n\n    if (!password) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"password_error\"]: \"Empty Password\",\n      }));\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const googleOnSuccess = (res) => {\n    console.log(res);\n    const userEmail = res.profileObj.email;\n    const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n    setUsername(parsed_username);\n    localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n    localStorage.setItem(\"username\", parsed_username);\n    updateToken();\n    alert(\"Logged In Successfully\");\n  };\n\n  const googleOnFailure = (res) => {\n    console.log(res);\n  };\n\n  return (\n    <div>\n      <Modal className=\"auth-modal\" isOpen={logModal} toggle={logModalToggle}>\n        <ModalHeader className=\"modal-header\" toggle={logModalToggle}>\n          Log in\n        </ModalHeader>\n        <ModalBody className=\"modal-body\">\n          <GoogleLogin\n            clientId=\"1087910724182-02v9tf6jm6h867i3vd81rui2dm4b6jvb.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                color=\"link\"\n                className=\"google-button\"\n              >\n                <i class=\"fab fa-google\"></i>\n                CONTINUE WITH GOOGLE\n              </Button>\n            )}\n            onSuccess={googleOnSuccess}\n            onFailure={googleOnFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <form method=\"POST\" onSubmit={handleSubmit} noValidate>\n            <div className=\"input-buttons-wrapper\">\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"USERNAME\"\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n              <div className=\"error-message\">{errors[\"username_error\"]}</div>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"PASSWORD\"\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n              <div className=\"error-message\">{errors[\"password_error\"]}</div>\n            </div>\n            <Button\n              type=\"submit\"\n              className=\"modal-login-button\"\n              color=\"primary\"\n            >\n              LOG IN\n            </Button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoginModal;\n"]},"metadata":{},"sourceType":"module"}