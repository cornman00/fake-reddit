{"ast":null,"code":"var _jsxFileName = \"/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/post/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CommunityBanner from \"../home/CommunityBanner\";\nimport axios from \"axios\";\nimport LoginModal from \"../navbar/LoginModal\";\nimport SignupModal from \"../navbar/SignupModal\";\nimport Comment from \"./Comment\";\nimport { Button } from \"reactstrap\";\n\nconst Post = () => {\n  const [newUpVote, setUpVote] = useState(0);\n  const [upVoteClicked, setUpVoteClicked] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [numComments, setNumComments] = useState(0);\n  const [logModal, setLogModal] = useState(false);\n  const [signModal, setSignModal] = useState(false);\n  const [comment_content, setCommentContent] = useState(\"\");\n  const postID = useParams().postID;\n  const upVote = newUpVote;\n  useEffect(() => {\n    axios.get(\"/post\", {\n      params: {\n        postID: postID\n      }\n    }).then(res => res.data).then(data => {\n      let post = data.post;\n      setUsername(post.username);\n      setUpVote(post.upVote);\n      setTitle(post.title);\n      setContent(post.content);\n      setCreatedAt(post.createdAt);\n      setNumComments(post.num_of_comments);\n    }).catch(console.log(\"Post Load Error\"));\n  }, []);\n\n  const postComment = () => {\n    axios.post(\"/post_comment\", {\n      username: localStorage.getItem(\"username\"),\n      content: comment_content,\n      postID: postID\n    });\n  };\n\n  const logModalToggle = () => setLogModal(!logModal);\n\n  const signModalToggle = () => setSignModal(!signModal);\n\n  const upVotePost = isUpVote => {\n    axios.patch(\"/posts/upvote\", {\n      isUpVote: isUpVote,\n      postID: postID\n    }).then(res => res.data).then(data => console.log(data.message));\n  };\n\n  const updateToken = () => {\n    if (localStorage.getItem(\"userToken\")) {\n      setToken(localStorage.getItem(\"userToken\"));\n      setUsername(localStorage.getItem(\"username\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vote-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (!upVoteClicked) {\n        setUpVote(upVote + 1);\n        setUpVoteClicked(true);\n        upVotePost(true);\n      } else {\n        setUpVote(upVote);\n        setUpVoteClicked(false);\n        upVotePost(false);\n      }\n    },\n    className: \"vote-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })), newUpVote === 0 ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-circle \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 32\n    }\n  }) : newUpVote, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (!upVoteClicked) {\n        if (upVote > 0) {\n          setUpVote(upVote - 1);\n          setUpVoteClicked(true);\n          upVotePost(false);\n        }\n      } else {\n        setUpVote(upVote);\n        setUpVoteClicked(false);\n        upVotePost(true);\n      }\n    },\n    className: \"vote-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"posted-by\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Posted by u/\", username, \" \", createdAt), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-functions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, numComments, \" Comments\"), localStorage.getItem(\"userToken\") ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-box-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    onSubmit: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"comment-box\",\n    name: \"\",\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    placeholder: \"What are your thoughts?\",\n    onChange: e => {\n      setCommentContent(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"cmt-btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    id: \"comment-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"COMMENT\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-box-container2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Log in or sign up to leave a comment\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"comment-btn2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"nav-button login-button\",\n    color: \"link\",\n    onClick: logModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, \"LOG IN\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"nav-button signup-button\",\n    color: \"primary\",\n    onClick: signModalToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, \"SIGN UP\"), /*#__PURE__*/React.createElement(LoginModal, {\n    updateToken: updateToken,\n    logModalToggle: logModalToggle,\n    logModal: logModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(SignupModal, {\n    updateToken: updateToken,\n    signModalToggle: signModalToggle,\n    signModal: signModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"hrLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-right-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CommunityBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/seokhyunkim/Desktop/projects/fake_reddit/client/src/components/post/Post.js"],"names":["React","useState","useEffect","useParams","CommunityBanner","axios","LoginModal","SignupModal","Comment","Button","Post","newUpVote","setUpVote","upVoteClicked","setUpVoteClicked","token","setToken","username","setUsername","title","setTitle","content","setContent","createdAt","setCreatedAt","numComments","setNumComments","logModal","setLogModal","signModal","setSignModal","comment_content","setCommentContent","postID","upVote","get","params","then","res","data","post","num_of_comments","catch","console","log","postComment","localStorage","getItem","logModalToggle","signModalToggle","upVotePost","isUpVote","patch","message","updateToken","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CommunityBanner from \"../home/CommunityBanner\";\nimport axios from \"axios\";\nimport LoginModal from \"../navbar/LoginModal\";\nimport SignupModal from \"../navbar/SignupModal\";\nimport Comment from \"./Comment\";\nimport { Button } from \"reactstrap\";\n\nconst Post = () => {\n  const [newUpVote, setUpVote] = useState(0);\n  const [upVoteClicked, setUpVoteClicked] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [numComments, setNumComments] = useState(0);\n  const [logModal, setLogModal] = useState(false);\n  const [signModal, setSignModal] = useState(false);\n  const [comment_content, setCommentContent] = useState(\"\");\n  const postID = useParams().postID;\n  const upVote = newUpVote;\n\n  useEffect(() => {\n    axios\n      .get(\"/post\", { params: { postID: postID } })\n      .then((res) => res.data)\n      .then((data) => {\n        let post = data.post;\n        setUsername(post.username);\n        setUpVote(post.upVote);\n        setTitle(post.title);\n        setContent(post.content);\n        setCreatedAt(post.createdAt);\n        setNumComments(post.num_of_comments);\n      })\n      .catch(console.log(\"Post Load Error\"));\n  }, []);\n\n  const postComment = () => {\n    axios.post(\"/post_comment\", {\n      username: localStorage.getItem(\"username\"),\n      content: comment_content,\n      postID: postID,\n    });\n  };\n\n  const logModalToggle = () => setLogModal(!logModal);\n\n  const signModalToggle = () => setSignModal(!signModal);\n\n  const upVotePost = (isUpVote) => {\n    axios\n      .patch(\"/posts/upvote\", { isUpVote: isUpVote, postID: postID })\n      .then((res) => res.data)\n      .then((data) => console.log(data.message));\n  };\n\n  const updateToken = () => {\n    if (localStorage.getItem(\"userToken\")) {\n      setToken(localStorage.getItem(\"userToken\"));\n      setUsername(localStorage.getItem(\"username\"));\n    }\n  };\n\n  return (\n    <div className=\"post-main-container\">\n      <div className=\"post-left-container\">\n        <div className=\"content-box\">\n          <div className=\"vote-bar\">\n            <button\n              onClick={() => {\n                if (!upVoteClicked) {\n                  setUpVote(upVote + 1);\n                  setUpVoteClicked(true);\n                  upVotePost(true);\n                } else {\n                  setUpVote(upVote);\n                  setUpVoteClicked(false);\n                  upVotePost(false);\n                }\n              }}\n              className=\"vote-button\"\n            >\n              <i className=\"fas fa-arrow-up\"></i>\n            </button>\n            {newUpVote === 0 ? <i className=\"fas fa-circle \"></i> : newUpVote}\n            <button\n              onClick={() => {\n                if (!upVoteClicked) {\n                  if (upVote > 0) {\n                    setUpVote(upVote - 1);\n                    setUpVoteClicked(true);\n                    upVotePost(false);\n                  }\n                } else {\n                  setUpVote(upVote);\n                  setUpVoteClicked(false);\n                  upVotePost(true);\n                }\n              }}\n              className=\"vote-button\"\n            >\n              <i className=\"fas fa-arrow-down\"></i>\n            </button>\n          </div>\n          <div className=\"post-contents\">\n            <p className=\"posted-by\">\n              Posted by u/{username} {createdAt}\n            </p>\n            <p className=\"post-title\">{title}</p>\n            <p className=\"post-content\">{content}</p>\n            <div className=\"summary-functions\">{numComments} Comments</div>\n            {localStorage.getItem(\"userToken\") ? (\n              <div className=\"comment-box-container\">\n                <form method=\"POST\" onSubmit={postComment}>\n                  <textarea\n                    className=\"comment-box\"\n                    name=\"\"\n                    id=\"\"\n                    cols=\"30\"\n                    rows=\"10\"\n                    placeholder=\"What are your thoughts?\"\n                    onChange={(e) => {\n                      setCommentContent(e.target.value);\n                    }}\n                  ></textarea>\n                  <div id=\"cmt-btn-container\">\n                    <Button type=\"submit\" color=\"primary\" id=\"comment-btn\">\n                      COMMENT\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <div className=\"comment-box-container2\">\n                <p>Log in or sign up to leave a comment</p>\n                <div id=\"comment-btn2\">\n                  <Button\n                    className=\"nav-button login-button\"\n                    color=\"link\"\n                    onClick={logModalToggle}\n                  >\n                    LOG IN\n                  </Button>\n                  <Button\n                    className=\"nav-button signup-button\"\n                    color=\"primary\"\n                    onClick={signModalToggle}\n                  >\n                    SIGN UP\n                  </Button>\n                  <LoginModal\n                    updateToken={updateToken}\n                    logModalToggle={logModalToggle}\n                    logModal={logModal}\n                  />\n                  <SignupModal\n                    updateToken={updateToken}\n                    signModalToggle={signModalToggle}\n                    signModal={signModal}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"comment-container\">\n          <div id=\"hrLine\"></div>\n          <Comment />\n        </div>\n      </div>\n\n      <div className=\"post-right-container\">\n        <CommunityBanner />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}