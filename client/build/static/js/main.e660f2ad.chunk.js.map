{"version":3,"sources":["components/home/Header.js","components/home/CommunityBanner.js","components/post/PostSummary.js","components/home/PostButton.js","components/home/Home.js","components/navbar/LoginModal.js","components/navbar/SignupModal.js","utilFunctions.js","components/navbar/Navbar.js","components/post/CreatePost.js","components/post/Reply.js","components/post/Comment.js","components/post/Post.js","components/error/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","alt","CommunityBanner","PostSummary","postID","title","content","username","comments_num","createdAt","upVote","useState","newUpVote","setUpVote","upVoteClicked","setUpVoteClicked","url_title","replace","upVotePost","isUpVote","axios","patch","then","res","data","console","log","message","onClick","to","style","textDecoration","color","PostButton","aria-hidden","type","placeholder","Home","posts","setPosts","useEffect","get","post_arr","localStorage","getItem","map","post","key","num_of_comments","LoginModal","updateToken","logModalToggle","logModal","setUsername","password","setPassword","username_error","password_error","errors","setErrors","formValidate","isValid","length","prev","Modal","isOpen","toggle","ModalHeader","ModalBody","clientId","render","renderProps","Button","disabled","onSuccess","userEmail","profileObj","email","parsed_username","substring","indexOf","setItem","tokenObj","access_token","alert","onFailure","cookiePolicy","method","onSubmit","e","preventDefault","error_message","window","location","reload","catch","err","noValidate","name","onChange","target","value","required","SignupModal","signModalToggle","signModal","setEmail","password1","setPassword1","password2","setPassword2","email_error","password1_error","password2_error","test","String","toLowerCase","emailCheck","Navbar","dropdownOpen","setDropdownOpen","setToken","setLogModal","setSignModal","isLoggedIn","user_name","Dropdown","size","prevState","DropdownToggle","DropdownMenu","right","DropdownItem","header","id","href","rel","divider","clear","CreatePost","setTitle","setContent","history","useHistory","json","goBack","Reply","commentID","points","showReply","setShowReply","replyContent","setReplyContent","upVoteComment","cols","rows","Comment","replyList","setReplyList","params","replies","parentID","reply","Post","setCreatedAt","numComments","setNumComments","comment_content","setCommentContent","commentList","setCommentList","useParams","comments","comment","NotFound","App","exact","path","component","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e660f2ad.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"subreddit-header-container\">\n        <img\n          className=\"header-image\"\n          src=\"images/header-school.png\"\n          alt=\"Header\"\n        />\n      <div className=\"subreddit-bottom-container\">\n        <div className=\"icon-container\">\n          <i className=\"fas fa-university\"></i>\n        </div>\n        <div className=\"title-container\">\n          <h3 className=\"subreddit-title\">\n            The University of Illinois at Urbana-Champaign\n          </h3>\n          <h6 className=\"subreddit-url\">r/UIUC</h6>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst CommunityBanner = () => {\n  return (\n    <div className=\"community-container\">\n      <div className=\"about-community\">About Community</div>\n      <p className=\"community-description\">\n        This subreddit is for anyone/anything related to UIUC. Students, Alumni,\n        Faculty, and Townies are all welcome. Given the lack of a regional\n        subreddit, it also covers most things in the Champaign-Urbana area. This\n        subreddit is not sponsored or endorsed by the University of Illinois or\n        any other on-campus group.\n      </p>\n      <hr />\n      <div className=\"community-date-created\">\n        <i className=\"fas fa-birthday-cake\"></i>\n        <p>Created Aug 7, 2020</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CommunityBanner;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nconst PostSummary = ({\n  postID,\n  title,\n  content,\n  username,\n  comments_num,\n  createdAt,\n  upVote,\n}) => {\n  const [newUpVote, setUpVote] = useState(upVote);\n  const [upVoteClicked, setUpVoteClicked] = useState(false);\n  const url_title = title.replace(/ /g, \"_\");\n\n  const upVotePost = (isUpVote) => {\n    axios\n      .patch(\"/api/posts/upvote\", { isUpVote: isUpVote, postID: postID })\n      .then((res) => res.data)\n      .then((data) => console.log(data.message));\n  };\n\n  return (\n    <div className=\"post-summary-container\">\n      <div className=\"vote-bar\">\n        <button\n          onClick={() => {\n            if (!upVoteClicked) {\n              setUpVote(upVote + 1);\n              setUpVoteClicked(true);\n              upVotePost(true);\n            } else {\n              setUpVote(upVote);\n              setUpVoteClicked(false);\n              upVotePost(false);\n            }\n          }}\n          className=\"vote-button\"\n        >\n          <i className=\"fas fa-arrow-up\"></i>\n        </button>\n        {newUpVote === 0 ? <i className=\"fas fa-circle \"></i> : newUpVote}\n        <button\n          onClick={() => {\n            if (!upVoteClicked) {\n              if (upVote > 0) {\n                setUpVote(upVote - 1);\n                setUpVoteClicked(true);\n                upVotePost(false);\n              }\n            } else {\n              setUpVote(upVote);\n              setUpVoteClicked(false);\n              upVotePost(true);\n            }\n          }}\n          className=\"vote-button\"\n        >\n          <i className=\"fas fa-arrow-down\"></i>\n        </button>\n      </div>\n      <Link\n        to={`/comments/${postID}/${url_title}`}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n      >\n        <div className=\"summary-contents\">\n          <p className=\"posted-by\">\n            Posted by u/{username} {createdAt}\n          </p>\n          <p className=\"post-summary-title\">{title}</p>\n          <p className=\"post-summary\">{content}</p>\n          <div className=\"summary-functions\">{comments_num} Comments</div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default PostSummary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst PostButton = () => {\n  return (\n    <div className=\"post-button-container\">\n      <i className=\"fa fa-reddit\" aria-hidden=\"true\"></i>\n      <Link to=\"/submit\">\n        <button className=\"create-button\">\n          <input type=\"text\" placeholder=\"Create Post\" />\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default PostButton;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport CommunityBanner from \"./CommunityBanner\";\nimport PostSummary from \"../post/PostSummary\";\nimport PostButton from \"./PostButton\";\n\nconst Home = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/posts\")\n      .then((res) => res.data)\n      .then((data) => {\n        setPosts(data.post_arr);\n      });\n  }, []);\n\n  return (\n    <div className=\"main-container\">\n      <Header />\n      <div className=\"contents\">\n        <div className=\"left-contents\">\n          {localStorage.getItem(\"userToken\") ? <PostButton /> : <div></div>}\n          {posts &&\n            posts.map((post) => {\n              return (\n                <PostSummary\n                  key={post.postID}\n                  postID={post.postID}\n                  title={post.title}\n                  content={post.content}\n                  username={post.username}\n                  comments_num={post.num_of_comments}\n                  createdAt={post.createdAt}\n                  upVote={post.upVote}\n                />\n              );\n            })}\n        </div>\n        <CommunityBanner />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.scss\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport GoogleLogin from \"react-google-login\";\n\nconst LoginModal = ({ updateToken, logModalToggle, logModal }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username_error: \"\",\n    password_error: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    const isValid = formValidate();\n    e.preventDefault();\n    if (isValid) {\n      axios\n        .post(\"/api/login\", {\n          username: username,\n          password: password,\n        })\n        .then((res) => res.data)\n        .then((data) => {\n          if (\"error_message\" in data) {\n            setErrors((prev) => ({\n              ...prev,\n              [\"password_error\"]: data.error_message,\n            }));\n          } else {\n            logModalToggle();\n            localStorage.setItem(\"userToken\", data.access_token);\n            localStorage.setItem(\"username\", data.username);\n            updateToken();\n            window.location.reload();\n          }\n        })\n        .catch((err) => {\n          logModalToggle();\n          alert(\"Sign up failed. Please try again\");\n          console.log(err);\n        });\n    }\n  };\n\n  const formValidate = () => {\n    let isValid = true;\n    setErrors({});\n\n    if (!username) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"username_error\"]: \"Empty Username\",\n      }));\n      isValid = false;\n    } else if (username.length <= 4 || username.length >= 21) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"username_error\"]:\n          \"The length of username should be between 5 and 20.\",\n      }));\n      isValid = false;\n    }\n\n    if (!password) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"password_error\"]: \"Empty Password\",\n      }));\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const googleOnSuccess = (res) => {\n    console.log(res);\n    const userEmail = res.profileObj.email;\n    const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n    setUsername(parsed_username);\n    localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n    localStorage.setItem(\"username\", parsed_username);\n    updateToken();\n    alert(\"Logged In Successfully\");\n  };\n\n  const googleOnFailure = (res) => {\n    console.log(res);\n  };\n\n  return (\n    <div>\n      <Modal className=\"auth-modal\" isOpen={logModal} toggle={logModalToggle}>\n        <ModalHeader className=\"modal-header\" toggle={logModalToggle}>\n          Log in\n        </ModalHeader>\n        <ModalBody className=\"modal-body\">\n          <GoogleLogin\n            clientId=\"1087910724182-02v9tf6jm6h867i3vd81rui2dm4b6jvb.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                color=\"link\"\n                className=\"google-button\"\n              >\n                <i className=\"fab fa-google\"></i>\n                CONTINUE WITH GOOGLE\n              </Button>\n            )}\n            onSuccess={googleOnSuccess}\n            onFailure={googleOnFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <form method=\"POST\" onSubmit={handleSubmit} noValidate>\n            <div className=\"input-buttons-wrapper\">\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"USERNAME\"\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n              <div className=\"error-message\">{errors[\"username_error\"]}</div>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"PASSWORD\"\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n              <div className=\"error-message\">{errors[\"password_error\"]}</div>\n            </div>\n            <Button\n              type=\"submit\"\n              className=\"modal-login-button\"\n              color=\"primary\"\n            >\n              LOG IN\n            </Button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../App.scss\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport GoogleLogin from \"react-google-login\";\nimport { emailCheck } from \"../../utilFunctions\";\n\nconst SignupModal = ({ updateToken, signModalToggle, signModal }) => {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [errors, setErrors] = useState({\n    username_error: \"\",\n    email_error: \"\",\n    password1_error: \"\",\n    password2_error: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    const isValid = formValidate();\n    e.preventDefault();\n\n    if (isValid) {\n      axios\n        .post(\"/api/signup\", {\n          email: email,\n          username: username,\n          password: password1,\n        })\n        .then((res) => res.data)\n        .then((data) => {\n          if (\"error_message\" in data) {\n            setErrors((prev) => ({\n              ...prev,\n              [\"password2_error\"]: data.error_message,\n            }));\n          } else {\n            signModalToggle();\n            alert(\"Successfully signed up\\nPlease Log in\");\n            console.log(\"New User: \" + username);\n          }\n        })\n        .catch((err) => {\n          signModalToggle();\n          alert(\"Sign up failed. Please try again later\");\n          console.log(err);\n        });\n    }\n  };\n\n  const formValidate = () => {\n    let isValid = true;\n    setErrors({});\n\n    if (!email) {\n      setErrors((prev) => ({ ...prev, [\"email_error\"]: \"Empty Email\" }));\n      isValid = false;\n    } else if (!emailCheck(email)) {\n      setErrors((prev) => ({ ...prev, [\"email_error\"]: \"Email Not Valid\" }));\n      isValid = false;\n    }\n\n    if (!username) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"username_error\"]: \"Empty Username\",\n      }));\n      isValid = false;\n    } else if (username.length <= 4 || username.length >= 21) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"username_error\"]:\n          \"The length of username should be between 5 and 20.\",\n      }));\n      isValid = false;\n    }\n\n    if (!password1) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"password1_error\"]: \"Empty Password\",\n      }));\n      isValid = false;\n    }\n\n    if (!password2) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"password2_error\"]: \"Empty Password\",\n      }));\n      isValid = false;\n    } else if (password1 !== password2) {\n      setErrors((prev) => ({\n        ...prev,\n        [\"password2_error\"]: \"Password Not Matched\",\n      }));\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const googleOnSuccess = (res) => {\n    console.log(res);\n    const userEmail = res.profileObj.email;\n    const parsed_username = userEmail.substring(0, userEmail.indexOf(\"@\"));\n    localStorage.setItem(\"userToken\", res.tokenObj.access_token);\n    localStorage.setItem(\"username\", parsed_username);\n    updateToken();\n    alert(\"Logged In Successfully\");\n  };\n\n  const googleOnFailure = (res) => {\n    console.log(res);\n  };\n\n  return (\n    <div>\n      <Modal className=\"auth-modal\" isOpen={signModal} toggle={signModalToggle}>\n        <ModalHeader className=\"modal-header\" toggle={signModalToggle}>\n          Sign up\n        </ModalHeader>\n        <ModalBody className=\"modal-body\">\n          <GoogleLogin\n            clientId=\"1087910724182-02v9tf6jm6h867i3vd81rui2dm4b6jvb.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                color=\"link\"\n                className=\"google-button\"\n              >\n                <i className=\"fab fa-google\"></i>\n                CONTINUE WITH GOOGLE\n              </Button>\n            )}\n            onSuccess={googleOnSuccess}\n            onFailure={googleOnFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n          <form method=\"POST\" onSubmit={handleSubmit} noValidate>\n            <div className=\"input-buttons-wrapper\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"EMAIL\"\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n              <div className=\"error-message\">{errors[\"email_error\"]}</div>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"USERNAME\"\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n              <div className=\"error-message\">{errors[\"username_error\"]}</div>\n              <input\n                type=\"password\"\n                name=\"password1\"\n                placeholder=\"PASSWORD\"\n                onChange={(e) => setPassword1(e.target.value)}\n                required\n              />\n              <div className=\"error-message\">{errors[\"password1_error\"]}</div>\n              <input\n                type=\"password\"\n                name=\"password2\"\n                placeholder=\"CONFIRM PASSWORD\"\n                onChange={(e) => setPassword2(e.target.value)}\n                required\n              />\n              <div className=\"error-message\">{errors[\"password2_error\"]}</div>\n            </div>\n            <Button\n              type=\"submit\"\n              className=\"modal-signup-button\"\n              color=\"primary\"\n            >\n              SIGN UP\n            </Button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SignupModal;\n","export function emailCheck(email) {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n","import React, { useState } from \"react\";\nimport \"../../App.scss\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\n\nconst Navbar = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [logModal, setLogModal] = useState(false);\n  const [signModal, setSignModal] = useState(false);\n\n  const logModalToggle = () => setLogModal(!logModal);\n\n  const signModalToggle = () => setSignModal(!signModal);\n\n  const updateToken = () => {\n    if (localStorage.getItem(\"userToken\")) {\n      setToken(localStorage.getItem(\"userToken\"));\n      setUsername(localStorage.getItem(\"username\"));\n    }\n  };\n\n  const logOut = (e) => {\n    e.preventDefault();\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  let isLoggedIn = localStorage.getItem(\"userToken\");\n  let user_name = localStorage.getItem(\"username\");\n\n  return (\n    <nav className=\"nav-container\">\n      <Link className=\"page-title\" to=\"/\">\n        <i className=\"fa fa-reddit\" aria-hidden=\"true\"></i>\n        <p className=\"nav-title\">FakeReddit</p>\n      </Link>\n\n      <form className=\"search-bar-container\">\n        <i className=\"fas fa-search\"></i>\n        <input\n          className=\"search-bar\"\n          name=\"search\"\n          type=\"search\"\n          placeholder=\"Search\"\n        />\n      </form>\n\n      <div className=\"button-container\">\n        {isLoggedIn === null ? (\n          <>\n            <Button\n              className=\"nav-button login-button\"\n              color=\"link\"\n              onClick={logModalToggle}\n            >\n              LOG IN\n            </Button>\n            <Button\n              className=\"nav-button signup-button\"\n              color=\"primary\"\n              onClick={signModalToggle}\n            >\n              SIGN UP\n            </Button>\n          </>\n        ) : (\n          <div></div>\n        )}\n\n        <Dropdown size=\"sm\" isOpen={dropdownOpen} toggle={toggle}>\n          <DropdownToggle className=\"dropdown-toggle\">\n            {isLoggedIn === null ? (\n              <i className=\"fas fa-user\"></i>\n            ) : (\n              <>\n                <span>\n                  <i className=\"fas fa-user\"></i>\n                </span>\n                <span>\n                  <p>{user_name}</p>\n                </span>\n              </>\n            )}\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem header>MORE STUFF</DropdownItem>\n            <DropdownItem>\n              <a\n                id=\"help-tag\"\n                href=\"https://www.reddithelp.com/hc/en-us\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Help Center\n              </a>\n            </DropdownItem>\n            <DropdownItem divider />\n            {isLoggedIn === null ? (\n              <DropdownItem>\n                <p onClick={logModalToggle}>Log In / Sign Up</p>\n              </DropdownItem>\n            ) : (\n              <DropdownItem onClick={logOut}>\n                <Link to=\"/\" className=\"logout-button\">\n                  Log Out\n                </Link>\n              </DropdownItem>\n            )}\n          </DropdownMenu>\n        </Dropdown>\n        <LoginModal\n          updateToken={updateToken}\n          logModalToggle={logModalToggle}\n          logModal={logModal}\n        />\n        <SignupModal\n          updateToken={updateToken}\n          signModalToggle={signModalToggle}\n          signModal={signModal}\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CommunityBanner from \"../home/CommunityBanner\";\nimport { Button } from \"reactstrap\";\n\nconst CreatePost = () => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [username] = useState(localStorage.getItem(\"username\"));\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"/api/submit\", {\n        title: title,\n        content: content,\n        username: username,\n      })\n      .then((res) => res.json)\n      .then((data) => {\n        history.goBack();\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Failed submitting your post\");\n      });\n  };\n\n  return (\n    <div className=\"create-post-container\">\n      <div className=\"create-post-main\">\n        <div className=\"create-post-left-container\">\n          <p>Create a post</p>\n          <hr />\n          <div className=\"post-box\">\n            <form method=\"POST\" onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n              <textarea\n                id=\"content\"\n                name=\"content\"\n                placeholder=\"Text\"\n                onChange={(e) => setContent(e.target.value)}\n                required\n              />\n              <Button type=\"submit\" className=\"post-button\" color=\"primary\">\n                POST\n              </Button>\n            </form>\n          </div>\n        </div>\n\n        <CommunityBanner />\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"reactstrap\";\n\nconst Reply = ({ commentID, username, createdAt, content, points }) => {\n  const [newUpVote, setUpVote] = useState(points);\n  const [upVoteClicked, setUpVoteClicked] = useState(false);\n  const [showReply, setShowReply] = useState(false);\n  const [replyContent, setReplyContent] = useState(\"\");\n\n  const upVoteComment = (isUpVote) => {\n    axios\n      .patch(\"/api/posts/upvote/comment\", {\n        isUpVote: isUpVote,\n        commentID: commentID,\n      })\n      .then((res) => res.data)\n      .then((data) => console.log(data.message));\n  };\n\n  return (\n    <div className=\"reply-container\">\n      <div className=\"vertical-line\"></div>\n      <div className=\"cmt\">\n        <div className=\"comment-vote-bar\">\n          <button\n            onClick={() => {\n              if (!upVoteClicked) {\n                setUpVote(points + 1);\n                setUpVoteClicked(true);\n                upVoteComment(true);\n              } else {\n                setUpVote(points);\n                setUpVoteClicked(false);\n                upVoteComment(false);\n              }\n            }}\n            className=\"comment-vote-button\"\n          >\n            <i className=\"fas fa-arrow-up\"></i>\n          </button>\n          <button\n            onClick={() => {\n              if (!upVoteClicked) {\n                if (points > 0) {\n                  setUpVote(points - 1);\n                  setUpVoteClicked(true);\n                  upVoteComment(false);\n                }\n              } else {\n                setUpVote(points);\n                setUpVoteClicked(false);\n                upVoteComment(true);\n              }\n            }}\n            className=\"comment-vote-button\"\n          >\n            <i className=\"fas fa-arrow-down\"></i>\n          </button>\n        </div>\n        <div className=\"comment-contents\">\n          <p className=\"posted-by\">\n            {username} {newUpVote} points <i className=\"fas fa-circle\"></i>\n            {createdAt}\n          </p>\n          <p className=\"comment-text\">{content}</p>\n\n          {localStorage.getItem(\"username\") ? (\n            <div className=\"comment-reply\">\n              <button\n                id=\"reply-button\"\n                type=\"button\"\n                onClick={() => setShowReply(!showReply)}\n              >\n                <i className=\"fas fa-comment\"></i>\n                Reply\n              </button>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n\n      {showReply ? (\n        <div className=\"comment-box-container\">\n          <form method=\"POST\">\n            <div className=\"reply\">\n              <div className=\"vertical-line\"></div>\n              <textarea\n                className=\"comment-box\"\n                name=\"\"\n                id=\"\"\n                cols=\"30\"\n                rows=\"10\"\n                placeholder=\"What are your thoughts?\"\n                onChange={(e) => {\n                  setReplyContent(e.target.value);\n                }}\n              ></textarea>\n            </div>\n            <div id=\"cmt-btn-container\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                id=\"comment-btn\"\n                disabled={!replyContent}\n              >\n                COMMENT\n              </Button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default Reply;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"reactstrap\";\nimport Reply from \"./Reply\";\n\nconst Comment = ({\n  commentID,\n  username,\n  createdAt,\n  content,\n  points,\n  postID,\n}) => {\n  const [newUpVote, setUpVote] = useState(points);\n  const [upVoteClicked, setUpVoteClicked] = useState(false);\n  const [showReply, setShowReply] = useState(false);\n  const [replyContent, setReplyContent] = useState(\"\");\n  const [replyList, setReplyList] = useState([]);\n\n  useEffect(() => {\n    const getReply = () => {\n      axios\n        .get(\"/api/get_reply\", {\n          params: { commentID: commentID, postID: postID },\n        })\n        .then((res) => res.data)\n        .then((data) => {\n          console.log(data);\n          setReplyList(data.replies);\n        })\n        .catch((err) => console.log(err));\n    };\n    getReply();\n  }, []);\n\n  const upVoteComment = (isUpVote) => {\n    axios\n      .patch(\"/api/posts/upvote/comment\", {\n        isUpVote: isUpVote,\n        commentID: commentID,\n      })\n      .then((res) => res.data)\n      .then((data) => console.log(data.message));\n  };\n\n  const postReply = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"/api/post_reply\", {\n        parentID: commentID,\n        username: localStorage.getItem(\"username\"),\n        content: replyContent,\n        postID: postID,\n      })\n      .then(window.location.reload())\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"cmt-container\">\n      <div className=\"cmt\">\n        <div className=\"comment-vote-bar\">\n          <button\n            onClick={() => {\n              if (!upVoteClicked) {\n                setUpVote(points + 1);\n                setUpVoteClicked(true);\n                upVoteComment(true);\n              } else {\n                setUpVote(points);\n                setUpVoteClicked(false);\n                upVoteComment(false);\n              }\n            }}\n            className=\"comment-vote-button\"\n          >\n            <i className=\"fas fa-arrow-up\"></i>\n          </button>\n          <button\n            onClick={() => {\n              if (!upVoteClicked) {\n                if (points > 0) {\n                  setUpVote(points - 1);\n                  setUpVoteClicked(true);\n                  upVoteComment(false);\n                }\n              } else {\n                setUpVote(points);\n                setUpVoteClicked(false);\n                upVoteComment(true);\n              }\n            }}\n            className=\"comment-vote-button\"\n          >\n            <i className=\"fas fa-arrow-down\"></i>\n          </button>\n        </div>\n        <div className=\"comment-contents\">\n          <p className=\"posted-by\">\n            {username} {newUpVote} points <i className=\"fas fa-circle\"></i>\n            {createdAt}\n          </p>\n          <p className=\"comment-text\">{content}</p>\n\n          {/* Show reply button if user is logged in */}\n\n          {localStorage.getItem(\"username\") ? (\n            <div className=\"comment-reply\">\n              <button\n                id=\"reply-button\"\n                type=\"button\"\n                onClick={() => setShowReply(!showReply)}\n              >\n                <i className=\"fas fa-comment\"></i>\n                Reply\n              </button>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n\n      {/* Reply box appears when the Reply button is clicked */}\n\n      {showReply ? (\n        <div className=\"comment-box-container\">\n          <form method=\"POST\" onSubmit={postReply}>\n            <div className=\"reply\">\n              <div className=\"vertical-line\"></div>\n              <textarea\n                className=\"comment-box\"\n                name=\"\"\n                id=\"\"\n                cols=\"30\"\n                rows=\"10\"\n                placeholder=\"What are your thoughts?\"\n                onChange={(e) => {\n                  setReplyContent(e.target.value);\n                }}\n              ></textarea>\n            </div>\n            <div id=\"cmt-btn-container\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                id=\"comment-btn\"\n                disabled={!replyContent}\n              >\n                COMMENT\n              </Button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <div></div>\n      )}\n\n      {/* Display replies */}\n\n      <div className=\"replies\">\n        {replyList &&\n          replyList.map((reply) => {\n            return (\n              <Reply\n                key={reply.commentID}\n                commentID={reply.commentID}\n                username={reply.username}\n                createdAt={reply.createdAt}\n                content={reply.content}\n                points={reply.points}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CommunityBanner from \"../home/CommunityBanner\";\nimport axios from \"axios\";\nimport LoginModal from \"../navbar/LoginModal\";\nimport SignupModal from \"../navbar/SignupModal\";\nimport Comment from \"./Comment\";\nimport { Button } from \"reactstrap\";\n\nconst Post = () => {\n  const [newUpVote, setUpVote] = useState(0);\n  const [upVoteClicked, setUpVoteClicked] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [numComments, setNumComments] = useState(0);\n  const [logModal, setLogModal] = useState(false);\n  const [signModal, setSignModal] = useState(false);\n  const [comment_content, setCommentContent] = useState(\"\");\n  const [commentList, setCommentList] = useState([]);\n  const postID = useParams().postID;\n  const upVote = newUpVote;\n\n  useEffect(() => {\n    const getPost = () => {\n      axios\n        .get(\"/api/post\", { params: { postID: postID } })\n        .then((res) => res.data)\n        .then((data) => {\n          let post = data.post;\n          setUsername(post.username);\n          setUpVote(post.upVote);\n          setTitle(post.title);\n          setContent(post.content);\n          setCreatedAt(post.createdAt);\n        })\n        .catch((err) => console.log(\"Post Load Error\"));\n    };\n    getPost();\n\n    const getComment = () => {\n      axios\n        .get(\"/api/get_comment\", {\n          params: { postID: postID },\n        })\n        .then((res) => res.data)\n        .then((data) => {\n          console.log(data);\n          setCommentList(data.comments);\n          setNumComments(data.numComments.num_of_comments);\n        })\n        .catch((err) => console.log(err));\n    };\n    getComment();\n  }, []);\n\n  const postComment = (e) => {\n    e.preventDefault();\n    console.log(`POST operation comment ${postID}`);\n    axios\n      .post(\"/api/post_comment\", {\n        username: localStorage.getItem(\"username\"),\n        content: comment_content,\n        postID: postID,\n      })\n      .then(window.location.reload())\n      .catch((err) => console.log(err));\n  };\n\n  const logModalToggle = () => setLogModal(!logModal);\n\n  const signModalToggle = () => setSignModal(!signModal);\n\n  const upVotePost = (isUpVote) => {\n    axios\n      .patch(\"/api/posts/upvote\", { isUpVote: isUpVote, postID: postID })\n      .then((res) => res.data)\n      .then((data) => console.log(data.message));\n  };\n\n  const updateToken = () => {\n    if (localStorage.getItem(\"userToken\")) {\n      setToken(localStorage.getItem(\"userToken\"));\n      setUsername(localStorage.getItem(\"username\"));\n    }\n  };\n\n  return (\n    <div className=\"post-main-container\">\n      <div className=\"post-left-container\">\n        <div className=\"content-box\">\n          <div className=\"vote-bar\">\n            <button\n              onClick={() => {\n                if (!upVoteClicked) {\n                  setUpVote(upVote + 1);\n                  setUpVoteClicked(true);\n                  upVotePost(true);\n                } else {\n                  setUpVote(upVote);\n                  setUpVoteClicked(false);\n                  upVotePost(false);\n                }\n              }}\n              className=\"vote-button\"\n            >\n              <i className=\"fas fa-arrow-up\"></i>\n            </button>\n            {newUpVote === 0 ? <i className=\"fas fa-circle \"></i> : newUpVote}\n            <button\n              onClick={() => {\n                if (!upVoteClicked) {\n                  if (upVote > 0) {\n                    setUpVote(upVote - 1);\n                    setUpVoteClicked(true);\n                    upVotePost(false);\n                  }\n                } else {\n                  setUpVote(upVote);\n                  setUpVoteClicked(false);\n                  upVotePost(true);\n                }\n              }}\n              className=\"vote-button\"\n            >\n              <i className=\"fas fa-arrow-down\"></i>\n            </button>\n          </div>\n          <div className=\"post-contents\">\n            <p className=\"posted-by\">\n              Posted by u/{username} {createdAt}\n            </p>\n            <p className=\"post-title\">{title}</p>\n            <p className=\"post-content\">{content}</p>\n            <div className=\"summary-functions\">{numComments} Comments</div>\n            {localStorage.getItem(\"userToken\") ? (\n              <div className=\"comment-box-container\">\n                <form method=\"POST\" onSubmit={postComment}>\n                  <textarea\n                    className=\"comment-box\"\n                    name=\"\"\n                    id=\"\"\n                    cols=\"30\"\n                    rows=\"10\"\n                    placeholder=\"What are your thoughts?\"\n                    onChange={(e) => {\n                      setCommentContent(e.target.value);\n                    }}\n                  ></textarea>\n                  <div id=\"cmt-btn-container\">\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      id=\"comment-btn\"\n                      disabled={!comment_content}\n                    >\n                      COMMENT\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            ) : (\n              <div className=\"comment-box-container2\">\n                <p>Log in or sign up to leave a comment</p>\n                <div id=\"comment-btn2\">\n                  <Button\n                    className=\"nav-button login-button\"\n                    color=\"link\"\n                    onClick={logModalToggle}\n                  >\n                    LOG IN\n                  </Button>\n                  <Button\n                    className=\"nav-button signup-button\"\n                    color=\"primary\"\n                    onClick={signModalToggle}\n                  >\n                    SIGN UP\n                  </Button>\n                  <LoginModal\n                    updateToken={updateToken}\n                    logModalToggle={logModalToggle}\n                    logModal={logModal}\n                  />\n                  <SignupModal\n                    updateToken={updateToken}\n                    signModalToggle={signModalToggle}\n                    signModal={signModal}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"comment-container\">\n          <div id=\"hrLine\"></div>\n          {commentList &&\n            commentList.map((comment) => {\n              return (\n                <Comment\n                  key={comment.commentID}\n                  commentID={comment.commentID}\n                  username={comment.username}\n                  createdAt={comment.createdAt}\n                  content={comment.content}\n                  points={comment.points}\n                  postID={postID}\n                />\n              );\n            })}\n        </div>\n      </div>\n\n      <div className=\"post-right-container\">\n        <CommunityBanner />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"not-found\">\n      <i className=\"fas fa-bug\"></i>\n      <p id=\"nf-msg\">Page Not Found</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/home/Home\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport CreatePost from \"./components/post/CreatePost\";\nimport Post from \"./components/post/Post\";\nimport NotFound from \"./components/error/NotFound\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/submit\" component={CreatePost} />\n        <Route exact path=\"/comments/:postID/:postTitle\" component={Post} />\n        <Route component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}